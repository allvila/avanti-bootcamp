{
  "openapi":"3.0.3",
  "info": {
    "title": "API Avanti-bootcamp",
    "version": "1.0.0"
  },
  "paths": {
    "/auth/login": {
      "post":{
        "summary": "Realiza a autenticação do usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequestBody"
              },
              "example": {
                "email": "Jhondoe@exemplo.com",
                "senha": "Senha#supersegura1234"
              }
            }
          }
        },
        "responses":{
          "200": {
            "description": "O login foi realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioComToken"
                },
                "example": {
                    "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvSWQiOjgsImlhdCI6MTc0NDQ2NjY4MywiZXhwIjoxNzQ0NDg0NjgzfQ.RXqs5G8r_0LXfrUsBbdphDFaUK-m-rZHh0WCxkEF0Ic",
                    "usuario": {
                      "id": 1,
                      "nome": "Jhon Doe",
                      "telefone": "(88) 99999-9999",
                      "email": "Jhondoe@exemplo.com"
                    }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O email ou a senha estavam incorretos",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Email ou senha inválidos."
                }
              }
            }
          }
        },
        "tags": ["Autenticação"]
      }
    },
    "/usuario": {
      "post": {
        "summary": "Rota para cadastro de um novo usuário",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioParaCadastro"
              },
              "example": {
                "nome": "Jhon Doe",
                "email": "Jhondoe@exemplo.com",
                "telefone": "(88) 99999-9999",
                "senha": "Senha#supersegura1234",
                "confirmarSenha": "Senha#supersegura1234"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "O cadastro do usuário foi realizado com sucesso",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioComToken"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c3VhcmlvSWQiOjgsImlhdCI6MTc0NDQ2NjY4MywiZXhwIjoxNzQ0NDg0NjgzfQ.RXqs5G8r_0LXfrUsBbdphDFaUK-m-rZHh0WCxkEF0Ic",
                  "usuario": {
                    "id": 8,
                    "nome": "Jhon Doe",
                    "telefone": "(88) 99999-9999",
                    "email": "Jhondoe@exemplo.com"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }

              }
            }
          },
          "409": {
            "description": "O email utilizado já possui um cadastro no sistema",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Já existe uma conta com o email informado."
                }
              }
            }
          },
          "400": {
            "description": "O corpo da requisição possui campos faltando ou mal formatados",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrosDeCampos"
                },
                "example": {
                  "erros": [
                    {
                      "campo": "email",
                      "mensagem": "O 'email' fornecido é inválido."
                    },
                    {
                      "campo": "senha",
                      "mensagem": "O 'senha' é obrigatório."
                    },
                    {
                      "campo": "confirmarSenha",
                      "mensagem": "O 'confirmarSenha' deve ser igual ao 'senha'."
                    }
                  ]
                }
              }
            }
          }

        },
        "tags": ["Autenticação", "Usuário"]
      },
      "delete": {
        "summary": "Exclusão de um usuário",
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "204": {
            "description": "O usuário foi excluido com sucesso"
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente ou o id não está vinculado com um usuário",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "examples": {
                  "exemplo1": {
                    "description": "Erro quando o token é inválido",
                    "value": {
                      "erro": "Token inválido."
                    }
                  },
                  "exemplo2": {
                    "description": "Erro quando o id não foi fornecido",
                    "value": {
                      "erro": "usuarioId não foi informado."
                    }
                  },
                  "exemplo3": {
                    "description": "Erro quando o id não está vinculado a um usuário",
                    "value": {
                      "erro": "O usuário com id 1 não foi encontrado."
                    }
                  }

                }
              }
            }
          }

        },
        "tags": ["Usuário"]
      },
      "put": {
        "summary": "Rota para edição do usuário",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsuarioParaEdicao"
              },
              "example": {
                "nome": "Jhon Doe",
                "telefone": "(88) 99999-9999",
                "senha": "Senha#supermaissegura1234",
                "confirmarSenha": "Senha#supermaissegura1234"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "O usuário foi editado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsuarioSemSenha"
                },
                "example": {
                  "id": 8,
                  "nome": "Jhon Does",
                  "email": "Jhondoe@exemplo.com",
                  "telefone": "(88) 88888-9999",
                  "criado_em": "2025-04-12T14:04:43.280Z",
                  "atualizadoem": "2025-04-12T23:10:17.048Z"
                }
              }
            }
          },
          "400": {
            "description": "O corpo da requisição possui um campo faltando ou com formato inválido.",
            "content": {
              "application/json 1": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrosDeCampos"
                },
                "example": {
                  "erros": [
                    {
                      "campo": "nome",
                      "mensagem": "O 'nome' é obrigatório."
                    },
                    {
                      "campo": "confirmarSenha",
                      "mensagem": "O 'confirmarSenha' deve ser igual ao 'senha'."
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "examples": {
                  "exemplo1": {
                    "description": "Erro quando o token é inválido",
                    "value": {
                      "erro": "Token inválido."
                    }
                  },
                  "exemplo2": {
                    "description": "Erro quando o id não foi fornecido",
                    "value": {
                      "erro": "usuarioId não foi informado."
                    }
                  },
                  "exemplo3": {
                    "description": "Erro quando o id não está vinculado a um usuário",
                    "value": {
                      "erro": "O usuário com id 1 não foi encontrado."
                    }
                  }

                }
              }
            }
          }
        },
        "tags": ["Usuário"]
      }
    },
    "/categoria": {
      "get": {
        "summary": "Listagem das categorias",
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "200": {
            "description": "Todos as categorias são listadas com sucesso",
            "content": {
              "application/json": {
                "schema":{
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Categoria"
                  }
                },
                "examples": {
                  "exemplo": {
                    "value": [
                              {
                                "id": 7,
                                "nome": "Câmera",
                                "prioridade": 2,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 6,
                                "nome": "Celular",
                                "prioridade": 3,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 2,
                                "nome": "Documento",
                                "prioridade": 2,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 5,
                                "nome": "Eletrônico",
                                "prioridade": 1,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 8,
                                "nome": "Notebook",
                                "prioridade": 3,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 1,
                                "nome": "Outro",
                                "prioridade": 1,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 3,
                                "nome": "Relógio",
                                "prioridade": 1,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 4,
                                "nome": "Roupa",
                                "prioridade": 1,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              },
                              {
                                "id": 9,
                                "nome": "Tablet",
                                "prioridade": 3,
                                "criado_em": "2025-04-09T23:41:14.223Z",
                                "atualizado_em": "2025-04-09T23:41:14.223Z"
                              }
                            ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Categoria"]

      }
    },
    "/item" : {
      "get": {
        "summary": "Listagem dos itens",
        "parameters": [
                        {
                          "in": "query",
                          "name": "categoria",
                          "schema": {
                            "type": "integer"
                          },
                          "required": false
                        },
                        {
                          "in": "query",
                          "name": "cidade",
                          "schema": {
                            "type": "string"
                          },
                          "required": false
                        },
                        {
                          "in": "query",
                          "name": "status",
                          "schema": {
                            "type": "string"
                          },
                          "required": false
                        },
                        {
                          "in": "query",
                          "name": "data_inicio",
                          "schema": {
                            "type": "string",
                            "format": "date"
                          },
                          "required": false
                        },
                        {
                          "in": "query",
                          "name": "data_fim",
                          "schema": {
                            "type": "string",
                            "format": "date"
                          },
                          "required": false
                        },
                        {
                          "in": "query",
                          "name": "nome",
                          "schema": {
                            "type": "string"
                          },
                          "required": false
                        }
                      ],
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "200": {
            "description": "Todos os itens são listados com sucesso",
            "content": {
              "application/json": {
                "schema":{
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                },
                "examples": {
                  "exemplo": {
                    "value": [
                                {
                                  "id": 8,
                                  "usuario_id": 1,
                                  "categoria_id": 5,
                                  "nome": "fone de ouvido",
                                  "foto_url": null,
                                  "data_ocorrido": "2025-10-11T01:30:00.000Z",
                                  "data_entregue": null,
                                  "email": "jhondoe@gmail.com",
                                  "telefone": "(88) 99206-4599",
                                  "estado": "Ceará",
                                  "cidade": "Tianguá",
                                  "bairro": "Santo Antonio",
                                  "logradouro": "Rua Mosa Albuquerque",
                                  "numero": null,
                                  "status": "Perdido",
                                  "criado_em": "2025-04-11T00:12:46.765Z",
                                  "atualizado_em": "2025-04-11T00:12:46.765Z",
                                  "categoria": {
                                    "id": 5,
		                                "nome": "Eletrônico",
                                    "prioridade": 1,
                                    "criado_em": "2025-04-09T23:41:14.223Z",
                                    "atualizado_em": "2025-04-09T23:41:14.223Z"
                                  }
                                },
                                {
                                  "id": 7,
                                  "usuario_id": 1,
                                  "categoria_id": 2,
                                  "nome": "Carteira",
                                  "foto_url": null,
                                  "data_ocorrido": "2025-09-11T01:30:00.000Z",
                                  "data_entregue": null,
                                  "email": "jhondoe@gmail.com",
                                  "telefone": "(88) 99206-4599",
                                  "estado": "Ceará",
                                  "cidade": "Tianguá",
                                  "bairro": "Santo Antonio",
                                  "logradouro": "Tadeu Melo",
                                  "numero": null,
                                  "status": "Encontrado",
                                  "criado_em": "2025-04-11T00:05:10.991Z",
                                  "atualizado_em": "2025-04-11T00:05:10.991Z",
                                  "categoria": {
                                    "id": 2,
                                    "nome": "Documento",
                                    "prioridade": 2,
                                    "criado_em": "2025-04-09T23:41:14.223Z",
                                    "atualizado_em": "2025-04-09T23:41:14.223Z"
                                  }
                                }
                              ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Item"]
      },
      "post": {
        "summary": "Rota para criação de item",
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json":{
              "schema":{
                "$ref": "#/components/schemas/ItemParaCriacao"
              },
              "example": {
                "nome": "fone de ouvido",
                "data_ocorrido": "2025-05-13 13:00",
                "email": "jhondoe@gmail.com",
                "telefone": "(88) 99206-4599",
                "estado": "Ceará",
                "cidade": "Fortaleza",
                "bairro": "Santo Antonio",
                "logradouro": "Rua Sargento Evaldo",
                "status": "Encontrado",
                "categoria_id": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "O item foi criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                },
                "example": {
                  "id": 1,
                  "usuario_id": 1,
                  "categoria_id": 1,
                  "nome": "fone de ouvido",
                  "foto_url": null,
                  "data_ocorrido": "2025-05-13T16:00:00.000Z",
                  "data_entregue": null,
                  "email": "jhondoe@gmail.com",
                  "telefone": "(88) 99206-4599",
                  "estado": "Ceará",
                  "cidade": "Fortaleza",
                  "bairro": "Santo Antonio",
                  "logradouro": "Rua Sargento Evaldo",
                  "numero": null,
                  "status": "Encontrado",
                  "criado_em": "2025-04-12T00:38:52.261Z",
                  "atualizado_em": "2025-04-12T00:38:52.261Z"
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          },
          "400": {
            "description": "A requisição foi realizada com campos faltando ou mal formatados no body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrosDeCampos"
                },
                "example": {
                  	"erros": [
                      {
                        "campo": "email",
                        "mensagem": "O 'email' fornecido é inválido."
                      },
                      {
                        "campo": "telefone",
                        "mensagem": "O 'telefone' fornecido é inválido. Insira no formato (xx) xxxxx-xxxx."
                      },
                      {
                        "campo": "cidade",
                        "mensagem": "O 'cidade' é obrigatório."
                      }
                    ]
                }
              }
            }
          }
        },
        "tags": ["Item"]
      }
    },
    "/item/meu": {
      "get": {
        "summary": "Listagem dos itens pertencentes ao usuário autenticado",
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "200": {
            "description": "Todos os itens são listados com sucesso",
            "content": {
              "application/json": {
                "schema":{
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                },
                "examples": {
                  "exemplo": {
                    "value": [
                                {
                                  "id": 8,
                                  "usuario_id": 1,
                                  "categoria_id": 5,
                                  "nome": "fone de ouvido",
                                  "foto_url": null,
                                  "data_ocorrido": "2025-10-11T01:30:00.000Z",
                                  "data_entregue": null,
                                  "email": "jhondoe@gmail.com",
                                  "telefone": "(88) 99206-4599",
                                  "estado": "Ceará",
                                  "cidade": "Tianguá",
                                  "bairro": "Santo Antonio",
                                  "logradouro": "Rua Mosa Albuquerque",
                                  "numero": null,
                                  "status": "Perdido",
                                  "criado_em": "2025-04-11T00:12:46.765Z",
                                  "atualizado_em": "2025-04-11T00:12:46.765Z",
                                  "categoria": {
                                    "id": 5,
		                                "nome": "Eletrônico",
                                    "prioridade": 1,
                                    "criado_em": "2025-04-09T23:41:14.223Z",
                                    "atualizado_em": "2025-04-09T23:41:14.223Z"
                                  }
                                },
                                {
                                  "id": 7,
                                  "usuario_id": 1,
                                  "categoria_id": 2,
                                  "nome": "Carteira",
                                  "foto_url": null,
                                  "data_ocorrido": "2025-09-11T01:30:00.000Z",
                                  "data_entregue": null,
                                  "email": "jhondoe@gmail.com",
                                  "telefone": "(88) 99206-4599",
                                  "estado": "Ceará",
                                  "cidade": "Tianguá",
                                  "bairro": "Santo Antonio",
                                  "logradouro": "Tadeu Melo",
                                  "numero": null,
                                  "status": "Encontrado",
                                  "criado_em": "2025-04-11T00:05:10.991Z",
                                  "atualizado_em": "2025-04-11T00:05:10.991Z",
                                  "categoria": {
                                    "id": 2,
                                    "nome": "Documento",
                                    "prioridade": 2,
                                    "criado_em": "2025-04-09T23:41:14.223Z",
                                    "atualizado_em": "2025-04-09T23:41:14.223Z"
                                  }
                                }
                              ]
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Item"]
      }
    },
    "/item/{itemId}": {
      "delete": {
        "summary": "Realiza a remoção de um item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id do item",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "204": {
            "description": "O item foi removido com sucesso"
          },
          "400": {
            "description": "O id do item não foi passado corretamente ou o item não existe mais",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "examples": {
                  "exemplo1": {
                    "description": "Não existe um item com o id informado",
                    "value": {
                      "erro": "O item com id 6 não foi encontrado."
                    }
                  },
                  "exemplo2": {
                    "description": "O id não foi passado",
                    "value": {
                      "erro": "O itemId não foi informado."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Item"]
      },
      "put": {
        "summary": "Realiza a edição de um item",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id do item",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemParaEdicao"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "O item foi editado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "400": {
            "description": "O id passado é inválido ou a requisição possui um campo faltando ou inválido no corpo",
            "content": {
              "application/json 1": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErrosDeCampos"
                }
              },
              "application/json 2": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Item"]
      }
    },
    "/item/img/{itemId}": {
      "post": {
        "summary": "Realiza o upload da imagem dos itens",
        "parameters": [
          {
            "name": "itemId",
            "in": "path",
            "required": true,
            "description": "Id do item",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {"bearerAuth": []}
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "imagem": {
                    "type": "string",
                    "format": "binary",
                    "description": "Imagem para upload"
                  }
                },
                "required": ["imagem"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "O upload da imagem foi realizado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Mensagem": {"type": "string"},
                    "Link": {"type": "string"}
                  }
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          },
          "400": {
            "description": "O id informado não existe ou a imagem não passada corretamente no corpo da requsição",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                }
              }
            }
          }
        },
        "tags": ["Item"]
      }
    },
    "/item/img/{nomeImg}": {
      "get": {
        "summary": "Retorna a imagem de acordo com o nome fornecido",
        "parameters": [
          {
            "name": "nomeImg",
            "in": "path",
            "required": true,
            "description": "nome da imagem",
            "schema": {
              "type": "string"
            }
          }
        ],
        "security": [
          {"bearerAuth": []}
        ],
        "responses": {
          "200": {
            "description": "imagem encontrada com sucesso",
            "content": {
              "image/png": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "A imagem não foi encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseErro"
                }
              }
            }
          },
          "500": {
            "description": "Ocorreu um erro interno durante a execução da requisição.",
            "content": {
              "application/json": {
                "schema": {
                   "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Ocorreu um erro interno no servidor."
                }
              }
            }
          },
          "401": {
            "description": "O usuário não está autenticado corretamente",
            "content": {
              "application/json":{
                "schema":{
                  "$ref": "#/components/schemas/ResponseErro"
                },
                "example": {
                  "erro": "Token inválido."
                }
              }
            }
          }
        },
        "tags": ["Item"]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "LoginRequestBody": {
        "type": "object",
        "properties": {
          "email": {"type": "string", "format":"email"},
          "senha": {"type": "string", "format": "password"}
        }
      },
      "UsuarioComToken": {
        "type": "object",
        "properties": {
          "token": {"type": "string"},
          "usuario": {"$ref":"#/components/schemas/UsuarioSemSenha"}
        }
      },
      "UsuarioSemSenha": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "nome": {"type": "string"},
          "telefone": {"type": "string"},
          "email": {"type": "string", "format": "email"}
        }
      },
      "UsuarioParaCadastro": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "nome": {"type": "string"},
          "telefone": {"type": "string"},
          "email": {"type": "string", "format": "email"},
          "senha": {"type": "string", "format": "password"},
          "confirmarSenha": {"type": "string", "format": "password"}
        }
      },
      "UsuarioParaEdicao": {
        "type": "object",
        "properties": {
          "nome": {"type": "string"},
          "telefone": {"type": "string"},
          "senha": {"type": "string", "format": "password"},
          "confirmarSenha": {"type": "string", "format": "password"}
        }
      },
      "ResponseErro": {
        "type": "object",
        "properties": {
          "erro": {"type": "string"}
        }
      },
      "ResponseErrosDeCampos": {
        "type": "object",
        "properties": {
          "erros": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErroDeCampo"
            }
          }
        }
      },
      "ErroDeCampo": {
        "type": "object",
        "properties": {
          "campo": {"type": "string"},
          "mensagem": {"type": "string"}
        }
      },
      "Categoria": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "nome": {"type": "string"},
          "prioridade": {"type": "string"},
          "criado_em": {"type": "string", "format": "date-time"},
          "atualizado_em": {"type": "string", "format": "date-time"}
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "usuario_id": {"type": "integer"},
          "categoria_id": {"type": "integer"},
          "nome": {"type": "string"},
          "foto_url": {"type":"string", "nullable": true},
          "data_ocorrido": {"type":"string", "format": "date-time"},
          "data_entregue": {"type":"string", "format": "date-time", "nullable": true},
          "email": {"type": "string", "format": "email"},
          "telefone": {"type": "string"},
          "estado": {"type": "string"},
          "cidade": {"type": "string"},
          "bairro": {"type": "string"},
          "logradouro": {"type": "string"},
          "numero": {"type": "integer", "nullable": true},
          "status": {"type": "string"},
          "criado_em": {"type": "string", "format": "date-time"},
          "atualizado_em": {"type": "string", "format": "date-time"},
          "categoria": {"$ref": "#/components/schemas/Categoria"}
        }
      },
      "ItemParaCriacao": {
        "type": "object",
        "properties": {
          "nome": {"type": "string"},
          "data_ocorrido": {"type":"string", "format": "date-time"},
          "email": {"type": "string", "format": "email"},
          "telefone": {"type": "string"},
          "estado": {"type": "string"},
          "cidade": {"type": "string"},
          "bairro": {"type": "string"},
          "logradouro": {"type": "string"},
          "numero": {"type": "integer", "nullable": true},
          "status": {"type": "string"},
          "categoria_id": {"type": "integer"}
        }
      },
      "ItemParaEdicao": {
        "type": "object",
        "properties": {
          "categoria_id": {"type": "integer"},
          "nome": {"type": "string"},
          "foto_url": {"type":"string"},
          "data_ocorrido": {"type":"string", "format": "date-time"},
          "data_entregue": {"type":"string", "format": "date-time"},
          "email": {"type": "string", "format": "email"},
          "telefone": {"type": "string"},
          "estado": {"type": "string"},
          "cidade": {"type": "string"},
          "bairro": {"type": "string"},
          "logradouro": {"type": "string"},
          "numero": {"type": "integer"}
        }
      }
    }
  },
  "tags": [
    {
      "name": "Autenticação",
      "description": "Rotas para a autenticação do usuário"
    },
    {
      "name": "Usuário",
      "description": "Rotas que envolvem o CRUD da entidade usuário"
    },
    {
      "name": "Categoria",
      "description": "Rotas que envolvem o CRUD da entidade categoria"
    },
    {
      "name": "Item",
      "description": "Rotas que envolvem o CRUD da entidade item"
    }
  ]
}
